
Allocating common symbols
Common symbol       size              file

arr_2               0xc               main.o

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x08000000         0x00020000         xr
SRAM             0x20000000         0x00005000         xrw
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00000400                _heap_size = 0x400
                0x00000800                _stack_size = 0x800

.text           0x08000000      0x2a4
                0x08000000                _S_TEXT = .
 *(.Vector_Table*)
 .Vector_Table  0x08000000       0x1c startup.o
                0x08000000                Vector_Table
 *(.text*)
 .text          0x0800001c      0x1f8 main.o
                0x0800001c                _sbrk
                0x08000078                UART_Init
                0x080000c0                UART_WriteChar
                0x080000f4                putchar
                0x08000114                printf
                0x08000144                GPIO_Init
                0x08000198                delay
                0x080001c4                NMI_Handler
                0x080001d0                main
 .text          0x08000214       0x78 startup.o
                0x08000214                Bus_Fault_Handler
                0x08000214                Reset_Handler
                0x08000214                Usage_Fault_Handler
                0x08000214                Hard_Fault_Handler
                0x08000214                Memory_Management_Fault_Handler
 *(.rodata)
 .rodata        0x0800028c       0x18 main.o
                0x0800028c                constantVar
                0x080002a4                _E_TEXT = .

.glue_7         0x080002a4        0x0
 .glue_7        0x00000000        0x0 linker stubs

.glue_7t        0x080002a4        0x0
 .glue_7t       0x00000000        0x0 linker stubs

.vfp11_veneer   0x080002a4        0x0
 .vfp11_veneer  0x00000000        0x0 linker stubs

.v4_bx          0x080002a4        0x0
 .v4_bx         0x00000000        0x0 linker stubs

.iplt           0x080002a4        0x0
 .iplt          0x00000000        0x0 main.o

.rel.dyn        0x080002a4        0x0
 .rel.iplt      0x00000000        0x0 main.o

.data           0x20000000       0x14 load address 0x080002a4
                0x20000000                _S_DATA = .
 *(.data)
 .data          0x20000000       0x14 main.o
                0x20000000                ODR
                0x20000004                arr
 .data          0x20000014        0x0 startup.o
                0x20000014                _E_DATA = .

.igot.plt       0x20000014        0x0 load address 0x080002b8
 .igot.plt      0x00000000        0x0 main.o

.bss            0x20000014        0xc load address 0x080002b8
                0x20000014                _S_BSS = .
 *(.bss)
 .bss           0x20000014        0x0 main.o
 .bss           0x20000014        0x0 startup.o
                0x20000014                _E_BSS = .
 COMMON         0x20000014        0xc main.o
                0x20000014                arr_2

.heap           0x20000020      0x400 load address 0x080002b8
                0x20000020                _S_HEAP = .
                0x20000420                . = (. + _heap_size)
 *fill*         0x20000020      0x400 
                0x20000420                _E_HEAP = .

.stack          0x20000420      0x800 load address 0x080002b8
                0x20000420                _S_STACK = .
                0x20000c20                . = (. + _stack_size)
 *fill*         0x20000420      0x800 
                0x20000c20                stack_top = .
                0x20000c20                . = ALIGN (0x4)
LOAD main.o
LOAD startup.o
OUTPUT(toggle-led.elf elf32-littlearm)

.debug_info     0x00000000      0x420
 .debug_info    0x00000000      0x2f6 main.o
 .debug_info    0x000002f6      0x12a startup.o

.debug_abbrev   0x00000000      0x25f
 .debug_abbrev  0x00000000      0x1b5 main.o
 .debug_abbrev  0x000001b5       0xaa startup.o

.debug_loc      0x00000000      0x20c
 .debug_loc     0x00000000      0x1d4 main.o
 .debug_loc     0x000001d4       0x38 startup.o

.debug_aranges  0x00000000       0x40
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 startup.o

.debug_line     0x00000000      0x158
 .debug_line    0x00000000       0xc7 main.o
 .debug_line    0x000000c7       0x91 startup.o

.debug_str      0x00000000      0x1d0
 .debug_str     0x00000000      0x176 main.o
                                0x1af (size before relaxing)
 .debug_str     0x00000176       0x5a startup.o
                                0x11d (size before relaxing)

.comment        0x00000000       0x11
 .comment       0x00000000       0x11 main.o
                                 0x12 (size before relaxing)
 .comment       0x00000000       0x12 startup.o

.ARM.attributes
                0x00000000       0x33
 .ARM.attributes
                0x00000000       0x33 main.o
 .ARM.attributes
                0x00000033       0x33 startup.o

.debug_frame    0x00000000      0x13c
 .debug_frame   0x00000000      0x10c main.o
 .debug_frame   0x0000010c       0x30 startup.o
